activity <- read.csv('activity.csv')
head(activity)
names(activity)
View(activity)
dir(activity)
str(activity)
View(activity)
View(activity)
summary(activity)
# Get the total steps per date
steps_by_date <- select(activity, steps, date, interval) %>%
#filter(!is.na(steps)) %>% # removed filter to include NAs as 0-step days in histogram
group_by(date) %>%
summarize(total_steps = sum(steps, na.rm = TRUE))
library(dplyr)
# Get the total steps per date
steps_by_date <- select(activity, steps, date, interval) %>%
#filter(!is.na(steps)) %>% # removed filter to include NAs as 0-step days in histogram
group_by(date) %>%
summarize(total_steps = sum(steps, na.rm = TRUE))
dim(steps_by_date)
# Plot the histogram
hist(steps_by_date$total_steps,
main = "Histogram of total steps per day",
xlab = "Total steps per day",
ylab = "Frequency [number of days]",
breaks = 20,
border = "cadetblue4",
col = "cadetblue3"
)
mean_total_steps <- mean(steps_by_date$total_steps)
median_total_steps <- median(steps_by_date$total_steps)
abline(v = mean_total_steps, lwd = 1, lty = 2, col = "red")
abline(v = median_total_steps, lwd = 1, lty = 2, col = "red")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 20,
border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_total_steps <- mean(steps_by_date$total_steps)
median_total_steps <- median(steps_by_date$total_steps)
abline(v = mean_total_steps, lwd = 1, lty = 2, col = "red")
abline(v = median_total_steps, lwd = 1, lty = 2, col = "red")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
# breaks = 20,
border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_total_steps <- mean(steps_by_date$total_steps)
median_total_steps <- median(steps_by_date$total_steps)
abline(v = mean_total_steps, lwd = 1, lty = 2, col = "red")
abline(v = median_total_steps, lwd = 1, lty = 2, col = "red")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 10,
border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_total_steps <- mean(steps_by_date$total_steps)
median_total_steps <- median(steps_by_date$total_steps)
abline(v = mean_total_steps, lwd = 1, lty = 2, col = "red")
abline(v = median_total_steps, lwd = 1, lty = 2, col = "red")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 10,
border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_steps <- mean(steps_by_date$total_steps)
median_steps <- median(steps_by_date$total_steps)
abline(v = mean_steps, lwd = 2, lty = 9, col = "red")
abline(v = median_steps, lwd = 2, lty = 9, col = "red")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 10,
border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_steps <- mean(steps_by_date$total_steps)
median_steps <- median(steps_by_date$total_steps)
abline(v = mean_steps, lwd = 2, pch - 2. lty = 2, col = "red")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 10,
border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_steps <- mean(steps_by_date$total_steps)
median_steps <- median(steps_by_date$total_steps)
abline(v = mean_steps, lwd = 2, pch - 2, lty = 2, col = "red")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 10,
border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_steps <- mean(steps_by_date$total_steps)
median_steps <- median(steps_by_date$total_steps)
abline(v = mean_steps, lwd = 2, pch = 2, lty = 2, col = "red")
abline(v = median_steps, lwd = 2, pch = 2, lty = 2, col = "red")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 10,
border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_steps <- mean(steps_by_date$total_steps)
median_steps <- median(steps_by_date$total_steps)
abline(v = mean_steps, lwd = 2, pch = 2, lty = 2, col = "red")
abline(v = median_steps, lwd = 2, pch = 2, lty = 2, col = "yellow")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 10,
# border = "cadetblue4",
col = "cadetblue3")
# calculate and report mean and median
mean_steps <- mean(steps_by_date$total_steps)
median_steps <- median(steps_by_date$total_steps)
abline(v = mean_steps, lwd = 2, pch = 2, lty = 2, col = "red")
abline(v = median_steps, lwd = 2, pch = 2, lty = 2, col = "yellow")
?abline
head(activity)
?summarize
library(dplyr)
View(activity)
library(ggplot2)
# Get the average steps per interval
steps_by_interval <- select(activity, steps, date, interval) %>%
group_by(interval) %>%
summarize(avg_steps = mean(steps, na.rm = TRUE))
# Plot
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type = "l",
main = "Average steps by interval",
xlab = "Interval",
ylab = "Average number of steps",
col = "cadetblue4")
max_steps <- max(steps_by_interval$avg_steps)
max_steps_interval <- steps_by_interval[steps_by_interval$avg_steps == max_steps,]$interval
abline(v = max_steps_interval, lwd = 1, lty = 2, col = "red")
abline(h = max_steps, lwd = 1, lty = 2, col = "red")
steps_by_interval <- select(activity, steps, date, interval) %>%
group_by(interval) %>%
summarize(avg_steps = mean(steps, na.rm = TRUE))
View(steps_by_interval)
View(steps_by_date)
View(steps_by_interval)
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type = "l",
main = "Average steps by interval",
xlab = "Interval",
ylab = "Average number of steps",
col = "cadetblue4")
max_steps <- max(steps_by_interval$avg_steps)
max_steps_interval <- steps_by_interval[steps_by_interval$avg_steps == max_steps,]$interval
abline(v = max_steps_interval, lwd = 1, lty = 2, col = "red")
abline(h = max_steps, lwd = 1, lty = 2, col = "red")
max_steps
max_steps_interval
# Get the average steps per interval
steps_by_interval <- select(activity, steps, date, interval) %>%
group_by(interval) %>%
summarize(avg_steps = mean(steps, na.rm = TRUE))
# Plot
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type = "l",
main = "Average steps by interval",
xlab = "Interval",
ylab = "Average number of steps",
col = "cadetblue4")
max_steps <- max(steps_by_interval$avg_steps)
max_steps_interval <- steps_by_interval[steps_by_interval$avg_steps == max_steps,]$interval
abline(v = max_steps_interval, lwd = 1, lty = 2, col = "red")
abline(h = max_steps, lwd = 1, lty = 2, col = "red")
NA_number <- count(activity[which(is.na(activity$steps))])
NA_number <- count(activity[which(is.na(activity$steps)),])
View(NA_number)
View(NA_number)
summary(activity)
new_activity <- activity
for (r in 1:nrow(new_activity)){
if (is.na(new_activity$steps[r])) {
i <- new_activity$interval[r]
mean_steps <- steps_by_interval[steps_by_interval$interval==i,]$avg_steps
new_activity$steps[r] <- mean_steps
}
}
View(new_activity)
View(steps_by_date)
new_steps_by_date <- select(new_activity, steps, date, interval) %>%
group_by(date) %>%
summarize(total_steps = sum(steps, na.rm = TRUE))
hist(new_steps_by_date$total_steps,
main = "Histogram of total steps per day,\nreplacing NAs with average steps for given interval",
xlab = "Total steps per day",
ylab = "Frequency [number of days]",
breaks = 20,
border = "cadetblue4",
col = "cadetblue3"
)
new_mean_steps <- mean(new_steps_by_date$total_steps)
new_median_steps <- median(new_steps_by_date$total_steps)
abline(v = new_mean_steps, lwd = 2, lty = 2, col = "red")
abline(v = new_median_steps, lwd = 2, lty = 2, col = "yellow")
new_steps_by_date <- select(new_activity, steps, date, interval) %>%
group_by(date) %>%
summarize(total_steps = sum(steps, na.rm = TRUE))
new_mean_steps <- mean(new_steps_by_date$total_steps)
new_median_steps <- median(new_steps_by_date$total_steps)
hist(new_steps_by_date$total_steps,
main = "Histogram of total steps per day,\nreplacing NAs with average steps for given interval",
xlab = "Total steps per day",
ylab = "Frequency [number of days]",
breaks = 20,
border = "cadetblue4",
col = "cadetblue3")
abline(v = new_mean_steps, lwd = 2, lty = 2, col = "red")
abline(v = new_median_steps, lwd = 2, lty = 2, col = "yellow")
# Sample of some averages in steps_by_interval:
steps_by_interval[steps_by_interval$interval %in% c(600,1000,2000),]
# Sample of NAs before replacement:
head(activity[which(is.na(activity$steps) & activity$interval %in% c(600,1000,2000)),], n = 30)
# I tried this mutate statement first, but it updated only the first NA, and left the others alone:
# updated_activity <- mutate(activity,
#	steps = ifelse(is.na(steps),
#		steps_by_interval[steps_by_interval$interval==interval,]$average_steps,
#		steps))
# Not very elegant, but working solution - loop and replace NAs one by one:
updated_activity <- activity
for(r in 1:nrow(updated_activity)) {
if (is.na(updated_activity$steps[r])) {
i <- updated_activity$interval[r];
avg <- steps_by_interval[steps_by_interval$interval==i,]$average_steps
updated_activity$steps[r] <- avg
}
}
new_steps_by_date <- select(new_activity, steps, date, interval) %>%
group_by(date) %>%
summarize(total_steps = sum(steps, na.rm = TRUE))
new_mean_steps <- mean(new_steps_by_date$total_steps)
new_median_steps <- median(new_steps_by_date$total_steps)
hist(new_steps_by_date$total_steps,
main = "Histogram of total steps per day,\nreplacing NAs with average steps for given interval",
xlab = "Total steps per day",
ylab = "Frequency [number of days]",
breaks = 20,
border = "cadetblue4",
col = "cadetblue3")
abline(v = new_mean_steps, lwd = 2, lty = 2, col = "red")
abline(v = new_median_steps, lwd = 2, lty = 2, col = "yellow")
# plot
hist(steps_by_date$total_steps,
main = "Total number of steps taken per day",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 20,
col = "cadetblue3")
# calculate and report mean and median
mean_steps <- mean(steps_by_date$total_steps)
median_steps <- median(steps_by_date$total_steps)
abline(v = mean_steps, lwd = 2, pch = 2, lty = 2, col = "red")
abline(v = median_steps, lwd = 2, pch = 2, lty = 2, col = "yellow")
hist(new_steps_by_date$total_steps,
main = "Total number steps per day \n(replacing NAs with average steps for given interval)",
xlab = "Total number of steps",
ylab = "Frequency (number of days)",
breaks = 20,
col = "cadetblue3")
abline(v = new_mean_steps, lwd = 2, lty = 2, col = "red")
abline(v = new_median_steps, lwd = 2, lty = 2, col = "yellow")
?mutate
weekday_id <- weekdays(as.Date(new_activity$date))
weekday_sep <- as.factor(ifelse(weekday=="Saturday" | weekday=="Sunday", "weekend", "weekday"))
activity_weekday <- merge(new_activity, weekday_id, weekday_sep)
weekday_sep <- as.factor(ifelse(weekday_id=="Saturday" | weekday_id=="Sunday", "weekend", "weekday"))
weekday_sep
activity_weekday <- merge(new_activity, weekday_id, weekday_sep)
activity_weekday <- mutate(new_activity, weekday_id, weekday_sep)
View(activity_weekday)
summary <- select(activity_weekday, steps, date, interval, weekday_sep) %>%
group_by(weekday_sep, interval) %>%
summarize(avg_steps = mean(steps, na.rm = TRUE))
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type = "l",
main = "Average steps by interval",
xlab = "Interval",
ylab = "Average number of steps",
col = "cadetblue4")
abline(v = max_steps_interval, lwd = 1, lty = 2, col = "red")
abline(h = max_steps, lwd = 1, lty = 2, col = "red")
weekday_id <- weekdays(as.Date(new_activity$date))
weekday_sep <- as.factor(ifelse(weekday_id=="Saturday" | weekday_id=="Sunday", "weekend", "weekday"))
activity_weekday <- mutate(new_activity, weekday_id, weekday_sep)
new_steps_by_interval_weekday <- select(activity_weekday, steps, date, interval, weekday_sep) %>%
group_by(weekday_sep, interval) %>%
summarize(avg_steps = mean(steps, na.rm = TRUE))
View(new_steps_by_interval_weekday)
xyplot(avg_steps ~ interval | weekday_sep, data = new_steps_by_interval_weekday, layout = c(2,1), type = "l",
main = "Average steps by interval",
xlab = "Interval",
ylab = "Average number of steps")
library(latticeExtra)
xyplot(avg_steps ~ interval | weekday_sep, data = new_steps_by_interval_weekday, layout = c(2,1), type = "l",
main = "Average steps by interval",
xlab = "Interval",
ylab = "Average number of steps")
xyplot(avg_steps ~ interval | weekday_sep, data = new_steps_by_interval_weekday, layout = c(1,2), type = "l",
main = "Average steps by interval",
xlab = "Interval",
ylab = "Average number of steps")
